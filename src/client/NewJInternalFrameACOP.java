/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import dbconn.DBConnection;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import java.util.regex.PatternSyntaxException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import libraries.Client;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import org.joda.time.LocalDate;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import reports.NewReportDialog;

/**
 *
 * @author Lancepyro
 */
public class NewJInternalFrameACOP extends javax.swing.JInternalFrame implements MouseListener {

    /**
     * @return the selectedMonth
     */
    public static int getSelectedMonth() {
        return selectedMonth;
    }

    /**
     * @param aSelectedMonth the selectedMonth to set
     */
    public static void setSelectedMonth(int aSelectedMonth) {
        selectedMonth = aSelectedMonth;
    }

    Client clientLib = new Client();
    private static int selectedMonth;
    private JasperPrint print = new JasperPrint();

    /**
     * Creates new form NewJInternalFrameACOP
     */
    public NewJInternalFrameACOP() {
        initComponents();
        setCaptureDataTable();
        setSelectedMonth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableACOP = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("ACOP LIST");

        jPanel1.setLayout(new java.awt.BorderLayout());

        jTableACOP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableACOP);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setPreferredSize(new java.awt.Dimension(394, 30));
        jPanel2.setLayout(new java.awt.GridLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Month");
        jPanel3.add(jLabel1, java.awt.BorderLayout.LINE_START);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Zoom-icon.png"))); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, java.awt.BorderLayout.LINE_END);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "Decemeber" }));
        jPanel3.add(jComboBox1, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/print-icon.png"))); // NOI18N
        jButton2.setText("Print");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, java.awt.BorderLayout.LINE_START);

        jPanel2.add(jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 197, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel5);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 197, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel6);

        jPanel7.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel2.setText("Search : ");
        jPanel7.add(jLabel2, java.awt.BorderLayout.LINE_START);

        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });
        jPanel7.add(jTextFieldSearch, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel7);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setSelectedMonth(jComboBox1.getSelectedIndex());
        clientLib.setId(jComboBox1.getSelectedIndex());
        loadTableData();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    disp();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        search();
    }//GEN-LAST:event_jTextFieldSearchKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableACOP;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
public static DefaultTableModel clientList = new DefaultTableModel() {
        public boolean isCellEditable(int row, int col) {
            if (col < 0) {
                return false;
            } else {
//                return true;
                return false;
            }
        }
    };
//end of Instantiation
    final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(clientList);
    //---End of Tables coloum and row handling--------------------------------------------------//
    //

    private void setCaptureDataTable() {
        String[] columnName = {
            "id",
            "FIRST NAME",
            "LAST NAME",
            "TYPE OF PENSION",
            "DATE OF BIRTH"};

        jTableACOP = new javax.swing.JTable(clientList);
        jTableACOP.setRowSorter(sorter);
        jTableACOP.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        jTableACOP.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableACOP.setRowSelectionAllowed(true);
        jTableACOP.getTableHeader().setReorderingAllowed(false);
        jTableACOP.setBackground(Color.getHSBColor(180, 244, 217));
        JTableHeader header = jTableACOP.getTableHeader();
        jTableACOP.addMouseListener(this);
        header.setBackground(Color.black);
        header.setForeground(Color.blue);
        header.setFont(new java.awt.Font("Tahoma", 1, 11));
        jScrollPane1.setViewportView(jTableACOP);

        for (int i = 0; i < columnName.length; i++) {
            clientList.addColumn(columnName[i]);
        }

        //...Set column width of the table
        TableColumn[] column = new TableColumn[200];
        //...
        column[0] = jTableACOP.getColumnModel().getColumn(0);
        column[0].setPreferredWidth(0);

        column[1] = jTableACOP.getColumnModel().getColumn(1);
        column[1].setPreferredWidth(100);

        column[2] = jTableACOP.getColumnModel().getColumn(2);
        column[2].setPreferredWidth(180);

        column[3] = jTableACOP.getColumnModel().getColumn(3);
        column[3].setPreferredWidth(180);

        TableColumn hidden = jTableACOP.getColumnModel().getColumn(0);
        hidden.setMinWidth(0);
        hidden.setPreferredWidth(0);
        hidden.setMaxWidth(0);
    }

    private void loadTableData() {
        clientList.setRowCount(0);
        clientLib.selectACOP();
        for (int i = 0; i < clientLib.getData().size(); i++) {
            clientList.addRow((Vector) clientLib.getData().get(i));
        }
    }

    public void disp() {

        //create report
        try {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            print = printMethod();
            NewReportDialog reportDialog = new NewReportDialog(javax.swing.JOptionPane.getFrameForComponent(this), true, printMethod(), "Member List");
            reportDialog.setSize(900, 700);
            reportDialog.setLocationRelativeTo(this);
            reportDialog.setVisible(true);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        } catch (Exception e) {
            e.printStackTrace();
        }
        //end
    }

    public JasperPrint printMethod() {
        JasperPrint localPrintVar = null;
        try {
            System.out.println("Filling Report.......");
            Map map = new HashMap();
            localPrintVar = JasperFillManager.fillReport(System.getProperty("user.dir") + "/src/reports/ACOPList.jasper", null,  new JRTableModelDataSource(NewJInternalFrameACOP.clientList));
            System.out.println("Done!");
        } catch (Exception e) {
            e.printStackTrace();
        }
        return localPrintVar;
    }
    
    private void search() {
        String text = this.jTextFieldSearch.getText();
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(
                        RowFilter.regexFilter("(?i)" + text, 2));
            } catch (PatternSyntaxException pse) {
                System.err.println("Bad regex pattern");
            }
        }
    }
    
    
    @Override
    public void mouseClicked(MouseEvent e) {

    }

    @Override
    public void mousePressed(MouseEvent e) {

    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }
}
