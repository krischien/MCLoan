/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import dbconn.DBConnection;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Frame;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import java.util.regex.PatternSyntaxException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import org.joda.time.LocalDate;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import reports.NewReportDialog;

/**
 *
 * @author Lancepyro
 */
public class NewClientListInternalFrame extends javax.swing.JInternalFrame implements MouseListener {

    libraries.Client clientLib = new libraries.Client();
    private int clientId = 0;
    private JasperPrint print = new JasperPrint();
    private JPanel panel = new JPanel();

    /**
     * Creates new form NewClientListInternalFrame
     */
    public NewClientListInternalFrame() {
        initComponents();
        setCaptureDataTable();
        loadTableData();

        this.setClientId(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClientList = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        jPopupMenu1.setComponentPopupMenu(jPopupMenu1);

        jMenuItem1.setText("Edit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("Delete");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        jMenuItem3.setText("Print");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Client List");

        jPanel8.setComponentPopupMenu(jPopupMenu1);
        jPanel8.setLayout(new java.awt.BorderLayout());

        jTableClientList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableClientList.setColumnSelectionAllowed(true);
        jTableClientList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(jTableClientList);

        jPanel8.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setMaximumSize(new java.awt.Dimension(100, 50));
        jPanel1.setMinimumSize(new java.awt.Dimension(100, 50));
        jPanel1.setPreferredSize(new java.awt.Dimension(394, 40));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel9.setPreferredSize(new java.awt.Dimension(98, 20));
        jPanel9.setLayout(new java.awt.GridLayout(1, 0));

        jButtonAdd.setMnemonic('A');
        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jPanel9.add(jButtonAdd);

        jButtonEdit.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jButtonEdit.setMnemonic('E');
        jButtonEdit.setText("Reload");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });
        jPanel9.add(jButtonEdit);

        jPanel1.add(jPanel9);

        jPanel3.setPreferredSize(new java.awt.Dimension(98, 20));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3);

        jPanel4.setPreferredSize(new java.awt.Dimension(98, 20));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel4);

        jPanel5.setPreferredSize(new java.awt.Dimension(98, 20));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel5);

        jPanel7.setPreferredSize(new java.awt.Dimension(98, 20));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel7);

        jPanel6.setPreferredSize(new java.awt.Dimension(98, 20));
        jPanel6.setLayout(new java.awt.BorderLayout());

        jTextFieldSearch.setMinimumSize(new java.awt.Dimension(50, 20));
        jTextFieldSearch.setPreferredSize(new java.awt.Dimension(59, 20));
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyPressed(evt);
            }
        });
        jPanel6.add(jTextFieldSearch, java.awt.BorderLayout.CENTER);

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton2, java.awt.BorderLayout.LINE_END);

        jPanel1.add(jPanel6);

        jPanel8.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel8, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        loadTableData();
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jTextFieldSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyPressed
        search();
    }//GEN-LAST:event_jTextFieldSearchKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        search();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        addEditClient(this.getClientId());
        loadTableData();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        addEditClient(this.getClientId());
        loadTableData();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        deleteClient();
        loadTableData();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        disp();
    }//GEN-LAST:event_jMenuItem3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableClientList;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
 public static DefaultTableModel clientList = new DefaultTableModel() {

    };
//end of Instantiation
    final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(clientList);
    //---End of Tables coloum and row handling--------------------------------------------------//
    //

    private void setCaptureDataTable() {
        String[] columnName = {
            "id",
            "ACCOUNT NO.",
            "FULL NAME",
            "PENSION",
            "TYPE OF PENSION",
            "PENSION NO.",
            "MONTHLY PENSION",
            "DATE OF REMITTANCE"
        };

        jTableClientList = new javax.swing.JTable(clientList);
        jTableClientList.setRowSorter(sorter);
        jTableClientList.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        jTableClientList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableClientList.setRowSelectionAllowed(true);
        jTableClientList.getTableHeader().setReorderingAllowed(false);
        jTableClientList.setBackground(Color.getHSBColor(180, 244, 217));
        JTableHeader header = jTableClientList.getTableHeader();
        jTableClientList.addMouseListener(this);
        header.setBackground(Color.black);
        header.setForeground(Color.blue);
        header.setFont(new java.awt.Font("Tahoma", 1, 11));
        jScrollPane1.setViewportView(jTableClientList);

        for (int i = 0; i < columnName.length; i++) {
            clientList.addColumn(columnName[i]);
        }

        //...Set column width of the table
        TableColumn[] column = new TableColumn[200];
        //...
        column[0] = jTableClientList.getColumnModel().getColumn(0);
        column[0].setPreferredWidth(0);

        column[1] = jTableClientList.getColumnModel().getColumn(1);
        column[1].setPreferredWidth(100);

        column[2] = jTableClientList.getColumnModel().getColumn(2);
        column[2].setPreferredWidth(180);

        column[3] = jTableClientList.getColumnModel().getColumn(3);
        column[3].setPreferredWidth(180);

        column[4] = jTableClientList.getColumnModel().getColumn(4);
        column[4].setPreferredWidth(180);

        column[5] = jTableClientList.getColumnModel().getColumn(5);
        column[5].setPreferredWidth(180);

        column[6] = jTableClientList.getColumnModel().getColumn(6);
        column[6].setPreferredWidth(180);

        column[7] = jTableClientList.getColumnModel().getColumn(7);
        column[7].setPreferredWidth(180);    

        TableColumn hidden = jTableClientList.getColumnModel().getColumn(0);
        hidden.setMinWidth(0);
        hidden.setPreferredWidth(0);
        hidden.setMaxWidth(0);
    }

    private void loadTableData() {
        clientList.setRowCount(0);
        clientLib.DisplayClientInfo();
        for (int i = 0; i < clientLib.getData().size(); i++) {
            clientList.addRow((Vector) clientLib.getData().get(i));
        }
    }

    private void search() {
        String text = this.jTextFieldSearch.getText();
        if (text.length() == 0) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(
                        RowFilter.regexFilter("(?i)" + text, 2));
            } catch (PatternSyntaxException pse) {
                System.err.println("Bad regex pattern");
            }
        }
    }

    private void addEditClient(int id) {
        try {
            AddEditClient newEdit = new AddEditClient((Frame) getDesktopPane().getTopLevelAncestor(), true, id);
            newEdit.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void deleteClient() {
        int ans = JOptionPane.showInternalConfirmDialog(this, "Are you sure you want to delete this client?", "Confirmation", JOptionPane.YES_NO_OPTION);

        if (ans == JOptionPane.YES_OPTION) {
            clientLib.setId(getClientId());
            clientLib.setActive("false");
            clientLib.delete();
        }
    }

    public void disp() {

        //create report
        try {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            print = printMethod();
            NewReportDialog reportDialog = new NewReportDialog(javax.swing.JOptionPane.getFrameForComponent(this), true, printMethod(), "Member List");
            reportDialog.setSize(900, 700);
            reportDialog.setLocationRelativeTo(this);
            reportDialog.setVisible(true);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        } catch (Exception e) {
            e.printStackTrace();
        }
        //end
    }

    public JasperPrint printMethod() {
        JasperPrint localPrintVar = null;

        clientLib.setId(getClientId());
        clientLib.getClientBirthdate();
        String split[] = clientLib.getBirthdate().toString().split("-");
        int year = Integer.parseInt(split[0]);
        int month = Integer.parseInt(split[1]);
        int day = Integer.parseInt(split[2]);
        LocalDate birthdate = new LocalDate(year, month, day);
        LocalDate now = new LocalDate();
        Period period = new Period(birthdate, now, PeriodType.yearMonthDay());
        try {
            System.out.println("Filling Report.......");
            Map map = new HashMap();
            map.put("id", getClientId());
            map.put("age", period.getYears() + "");
            localPrintVar = JasperFillManager.fillReport(System.getProperty("user.dir") + "/src/reports/ClientInfo.jasper", map, DBConnection.conn);
            System.out.println("Done!");
        } catch (Exception e) {
            e.printStackTrace();
        }
        return localPrintVar;
    }

    @Override
    public void mouseClicked(MouseEvent e) {

    }

    @Override
    public void mousePressed(MouseEvent e) {

    }

    @Override
    public void mouseReleased(MouseEvent e) {
        if (e.isPopupTrigger()) {
            jPopupMenu1.show(e.getComponent(), e.getX(), e.getY());
            int selectedId = Integer.parseInt(jTableClientList.getValueAt(jTableClientList.getSelectedRow(), 0).toString());
            this.setClientId(selectedId);
        }
    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }

    /**
     * @return the clientId
     */
    public int getClientId() {
        return clientId;
    }

    /**
     * @param clientId the clientId to set
     */
    public void setClientId(int clientId) {
        this.clientId = clientId;
    }

}
